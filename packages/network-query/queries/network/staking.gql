# Copyright 2020-2022 SubQuery Pte Ltd authors & contributors
# SPDX-License-Identifier: Apache-2.0

fragment WithdrawalFields on Withdrawl {
  id
  index
  delegator
  indexer
  startTime
  amount
  status
  type
}

fragment RewardFields on Reward {
  id
  delegatorAddress
  indexerAddress
  amount
  claimedTime
}

fragment UnclaimedRewardFields on UnclaimedReward {
  id
  delegatorAddress
  indexerAddress
  amount
}

fragment IndexerRewardFields on IndexerReward {
  id
  indexerId
  eraIdx
  amount
}

query GetWithdrawls($delegator: String!, $status: WithdrawalStatus!, $offset: Int) {
  withdrawls(
    filter: { delegator: { equalTo: $delegator }, status: { equalTo: $status } }
    offset: $offset
  ) {
    totalCount
    nodes {
      ...WithdrawalFields
    }
  }
}

query GetTotalDelegationWithdrawls($delegator: String!) {
  withdrawls(filter: { delegator: { equalTo: $delegator }, type: { equalTo: UNDELEGATION } }) {
    aggregates {
      sum {
        amount
      }
    }
  }
}

query GetRewards($address: String!) {
  rewards(orderBy: CLAIMED_TIME_DESC, filter: { delegatorAddress: { equalTo: $address } }) {
    totalCount
    nodes {
      ...RewardFields
    }
  }
  unclaimedRewards(
    filter: { delegatorAddress: { equalTo: $address }, amount: { greaterThan: "0" } }
  ) {
    totalCount
    nodes {
      ...UnclaimedRewardFields
    }
  }
}

query GetIndexerRewards($address: String!, $era1: String!, $era2: String!) {
  indexerRewards(
    filter: {
      indexerId: { equalTo: $address }
      and: { eraIdx: { equalTo: $era1 } }
      or: { eraIdx: { equalTo: $era2 } }
    }
  ) {
    totalCount
    nodes {
      ...IndexerRewardFields
    }
  }
}
