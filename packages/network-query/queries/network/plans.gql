# Copyright 2020-2022 SubQuery Pte Ltd authors & contributors
# SPDX-License-Identifier: Apache-2.0

fragment PlanTemplateFields on PlanTemplate {
  id
  period
  dailyReqCap
  rateLimit
  metadata
  active
  priceToken
}

fragment PlanFields on Plan {
  id
  active
  creator
  deploymentId
  price
}

fragment PlansNodeFields on Plan {
  id
  active
  creator
  deploymentId
  price
  planTemplate {
    id
    period
    dailyReqCap
    rateLimit
    metadata
    active
    priceToken
  }
}

query GetDeploymentPlans($address: String!, $deploymentId: String!) {
  plans(
    filter: {
      creator: { equalTo: $address }
      and: [
        { active: { equalTo: true } }
        { or: [{ deploymentId: { isNull: true } }, { deploymentId: { equalTo: $deploymentId } }] }
      ]
    }
  ) {
    totalCount
    nodes {
      ...PlanFields
      planTemplate {
        ...PlanTemplateFields
      }
    }
  }
}

query GetPlanTemplates($offset: Int) {
  planTemplates(first: 10, offset: $offset, filter: { active: { equalTo: true } }) {
    totalCount
    nodes {
      ...PlanTemplateFields
    }
  }
}

query GetPlans($address: String!) {
  plans(
    filter: {
      creator: { equalTo: $address }
      and: { deploymentId: { isNull: true } }
      active: { equalTo: true }
    }
  ) {
    totalCount
    nodes {
      ...PlanFields
      planTemplate {
        ...PlanTemplateFields
      }
    }
  }
}

query GetSpecificPlans($address: String) {
  deploymentIndexers(filter: { indexerId: { equalTo: $address } }) {
    totalCount
    nodes {
      deployment {
        id
        project {
          id
          metadata
        }
        plans(filter: { creator: { equalTo: $address }, and: { active: { equalTo: true } } }) {
          nodes {
            ...PlanFields
            planTemplate {
              ...PlanTemplateFields
            }
          }
        }
      }
    }
  }
}
