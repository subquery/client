# Copyright 2020-2022 SubQuery Pte Ltd authors & contributors
# SPDX-License-Identifier: Apache-2.0

fragment ProjectFields on Project {
  id
  owner
  metadata
  deploymentMetadata
  deploymentId
  updatedTimestamp
  createdTimestamp
  type
  deployments {
    nodes {
      id
      serviceAgreements {
        aggregates {
          sum {
            lockedAmount
          }
        }
        totalCount
      }
      serviceAgreementsActive: serviceAgreements(
        filter: { endTime: { greaterThanOrEqualTo: $now } }
      ) {
        totalCount
      }
      indexers(
        filter: { indexer: { active: { equalTo: true } }, status: { notEqualTo: TERMINATED } }
      ) {
        totalCount
      }
    }
  }
  totalReward
}

fragment ProjectUpdateField on Project {
  id
  owner
  metadata
  updatedTimestamp
  totalReward
  deployments {
    nodes {
      serviceAgreements {
        aggregates {
          sum {
            lockedAmount
          }
        }
        totalCount
      }
      serviceAgreementsActive: serviceAgreements(
        filter: { endTime: { greaterThanOrEqualTo: $now } }
      ) {
        totalCount
      }
      indexers(
        filter: { indexer: { active: { equalTo: true } }, status: { notEqualTo: TERMINATED } }
      ) {
        totalCount
      }
    }
  }
}

query GetProject($id: String!, $now: Datetime = "1970-01-01T00:00:00") {
  project(id: $id) {
    ...ProjectFields
  }
}

query GetProjects(
  $offset: Int
  $type: [ProjectType!] = [SUBQUERY, RPC]
  $orderBy: [ProjectsOrderBy!] = ID_ASC
  $ids: [String!] = [""]
  $now: Datetime = "1970-01-01T00:00:00"
) {
  projects(
    first: 10
    offset: $offset
    orderBy: $orderBy
    filter: { id: { notIn: $ids }, type: { in: $type } }
  ) {
    totalCount
    nodes {
      ...ProjectFields
    }
  }
}

query GetProjectsAll($now: Datetime = "1970-01-01T00:00:00") {
  projects(orderBy: ID_ASC) {
    nodes {
      ...ProjectUpdateField
    }
  }
}

query GetProjectDeployments($projectId: String!) {
  project(id: $projectId) {
    deployments {
      totalCount
      nodes {
        id
        metadata
        createdTimestamp
      }
    }
  }
}
